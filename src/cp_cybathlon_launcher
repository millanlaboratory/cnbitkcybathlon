#!/bin/bash

# Make trap for graceful exits
trap 'my_exit; exit' SIGINT SIGTERM SIGQUIT SIGHUP

my_exit()
{
    cl_rpc closexdf	
    wmctrl -c "Dynamic GUI"
    wmctrl -c "Feedback"
    wmctrl -c "Controller"
    cl_killloop
    cl_killloop
    wmctrl -c "CnbiTk Acquisition"
    wmctrl -c "CnbiTk Processing"
    wmctrl -c "CnbiTk Nameserver"
}

# Defaults
DEF_XML="/home/sperdikis/Desktop/AN14VE_cybathlon.xml"
DEF_NoAmp=2

# Ask whether to run with defaults for all parameters
zenity --question --text="Do you want to run with the default values for all parameters?" --ok-label="Yes" --cancel-label="No"
if [[ $? == 0 ]] ; then
    USE_DEFAULTS=1	
    echo "Running with default parameters"
else
    USE_DEFAULTS=0
    echo "Asking parameters with GUI"
fi

if [[ $USE_DEFAULTS == 1 ]] ; then # Use default values

    XML=$DEF_XML
    NoAmp=$DEF_NoAmp	

else # Input parameters with GUI

    # XML
    XML=$(zenity --file-selection --file-filter=*.xml --title "CnbiTk Cybathlon Launcher - XML Configuration")
    if [[ -z "$XML" ]] ; then
	exit 2
    fi

    # Number of amps to use
    reply=$(zenity --list --title="CNBI Cybathlon" --text="Will you use EOG (2 synced amps)?" --radiolist --column="" --column="" TRUE "Yes, run with 2 gUSBamps" FALSE "No, run with single gUSBamp")
    if [[ -z "$reply" ]] ; then
	exit 2
    fi
    if [[ "$reply" =~ "Yes, run with 2 gUSBamps" ]]; then
        NoAmp=2
    else
        NoAmp=1
    fi
fi # End of zenity GUIs in case of non-default params


while true; do

	#Kill existing loop instances and close their terminal windows
        wmctrl -c "Dynamic GUI"
        wmctrl -c "Controller"
        wmctrl -c "Feedback"
	cl_killloop
	cl_killloop
        wmctrl -c "CnbiTk Acquisition"
        wmctrl -c "CnbiTk Processing"
        wmctrl -c "CnbiTk Nameserver"

	sleep 2

	# Run the loop with 1 or 2 gUSBamps depending on the parameter
	if [ $NoAmp == 1 ]; then
	    echo "Running with single gUSBamp"
	    cl_runloopscope -d gtec
	elif [ $NoAmp == 2 ]; then
	    echo "Running with two gUSBamps"
	    gnome-terminal \
	    ---tab -e "bash -c 'cl_keepalive cl_nameserver'" --title "CnbiTk Nameserver" \
	    ---tab -e "bash -c 'sleep 1; cl_keepalive cl_processing'" --title "CnbiTk Processing" \
	    ---tab -e "bash -c 'sleep 2; cl_keepalive cl_acquisitionscope -d \"gtec|deviceid|any+any\"'" --title "CnbiTk Acquisition"
	else
	    echo "Illegal argument, exiting..."
	    exit 2
	fi

	sleep 5
	# Upload all parameters to nameserver and start BCI processing
	echo "Uploading XML parameters to nameserver"
	cl_init -x $XML -lN -B mi -T mi_bhbf
	echo "Starting BCI process"
	BCIPID=$(cl_init -x $XML -scN -B mi -T mi_bhbf)
	
	sleep 2
	# Launch also the EOG processing
	echo "Starting EOG artifact detection process"
	EOGPID=$(cl_rpc fork)
	# Have tp hardcode this as there is no way to retrieve it from XML or nameserver...reinstating the artifact taskset would solve this. Discuss with Luca
	cl_rpc directory $EOGPID $CNBITKSHARE_ROOT/cnbicybathlon/cnbitkmat/matndf/
	cl_rpc exec $EOGPID ndf_cybathlon_eog	

	sleep 2

	echo "Opening GDF and log files"
	# Open GDF and log files
	GDFBASENAME=$(ccfg_cli -x $XML -N -B mi -T mi_bhbf -a)".gdf"
	LOGBASENAME=$(ccfg_cli -x $XML -N -B mi -T mi_bhbf -o)".log"
	cl_rpc openxdf $GDFBASENAME $LOGBASENAME "cybathlon"

	sleep 2

	# Launch feedback mi_control
	echo "Launching mi_control feedback"
	gnome-terminal -e "mi_control" --title "Feedback"

	sleep 2
	
	# Launch cybathlon controller
	echo "Starting Cybathlon controller"
	gnome-terminal -e "mi_cybathlon_controller" --title "Controller"
	
	# Launch dynamic parameter GUI
	echo "Starting dynamic parameter GUI"
	gnome-terminal -e "cnbi_cybathlon_dialog" --title "Dynamic GUI"
	
	# Keep reading user input here until Q is pressed
	while :
	do
	    read -t 1 -n 1 key
	    if [[ $key = q ]]; then
		break
	    fi
	done

	# Close the GDF file
	echo "Closing GDF file"
	cl_rpc closexdf

	# Terminate MATLAB prcesses
	echo "Terminating BCI process"
	cl_rpc terminate $BCIPID
	echo "Terminating EOG process"
	cl_rpc terminate $EOGPID

	# Shut down everything
	echo "Closing all terminals"
        wmctrl -c "Dynamic GUI"
        wmctrl -c "Controller"
        wmctrl -c "Feedback"
	cl_killloop
	cl_killloop
        wmctrl -c "CnbiTk Acquisition"
        wmctrl -c "CnbiTk Processing"
        wmctrl -c "CnbiTk Nameserver"
	
	# Ask whether to re-run with same parameters
	zenity --question --text="Do you want to run again with same parameters?" --ok-label="Yes" --cancel-label="No"
	if [[ $? == 0 ]] ; then
	    echo "Running with the same taskset and commands"
	else
	    echo "Exiting"
	    break
	fi
done
